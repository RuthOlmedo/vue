{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nexport default {\n  name: \"AddTask\",\n  data() {\n    return {\n      newTask: \"\",\n      // Campo de entrada para la nueva tarea\n      tasks: [] // Lista de tareas locales\n    };\n  },\n  methods: {\n    addTask() {\n      if (this.newTask.trim() === \"\") return;\n      const newTask = {\n        todo: this.newTask,\n        completed: false,\n        id: Date.now()\n      };\n\n      // Añadir la nueva tarea al inicio de la lista\n      this.tasks.unshift(newTask);\n      this.newTask = \"\"; // Limpiar el campo de entrada después de agregar\n\n      // Emitir evento para agregar tarea a otras secciones si es necesario\n      this.$emit(\"taskAdded\", newTask);\n    },\n    deleteTask(task) {\n      this.tasks = this.tasks.filter(t => t.id !== task.id);\n    },\n    toggleTaskCompletion(task) {\n      task.completed = !task.completed;\n    }\n  }\n};","map":{"version":3,"names":["name","data","newTask","tasks","methods","addTask","trim","todo","completed","id","Date","now","unshift","$emit","deleteTask","task","filter","t","toggleTaskCompletion"],"sources":["src/views/AddTask.vue"],"sourcesContent":["<template>\r\n  <div class=\"add-task-container\">\r\n      <h1>Añadir Tarea</h1>\r\n      <div class=\"input-group\">\r\n          <input \r\n              v-model=\"newTask\" \r\n              @keyup.enter=\"addTask\" \r\n              placeholder=\"Añadir nueva tarea\" \r\n              class=\"task-input\"\r\n          />\r\n          <button @click=\"addTask\" class=\"add-button\">Añadir</button>\r\n      </div>\r\n\r\n      <div v-if=\"tasks.length > 0\" class=\"task-list\">\r\n          <div v-for=\"task in tasks\" :key=\"task.id\" class=\"task-item\">\r\n              <span :class=\"{ completed: task.completed }\">{{ task.todo }}</span>\r\n              <div>\r\n                  <button @click=\"toggleTaskCompletion(task)\">\r\n                      {{ task.completed ? 'Desmarcar' : 'Completar' }}\r\n                  </button>\r\n                  <button @click=\"deleteTask(task)\">Eliminar</button>\r\n              </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"AddTask\",\r\n  data() {\r\n      return {\r\n          newTask: \"\", // Campo de entrada para la nueva tarea\r\n          tasks: [],   // Lista de tareas locales\r\n      };\r\n  },\r\n  methods: {\r\n      addTask() {\r\n          if (this.newTask.trim() === \"\") return;\r\n\r\n          const newTask = {\r\n              todo: this.newTask,\r\n              completed: false,\r\n              id: Date.now(), \r\n          };\r\n\r\n          // Añadir la nueva tarea al inicio de la lista\r\n          this.tasks.unshift(newTask);\r\n          this.newTask = \"\"; // Limpiar el campo de entrada después de agregar\r\n\r\n          // Emitir evento para agregar tarea a otras secciones si es necesario\r\n          this.$emit(\"taskAdded\", newTask);\r\n      },\r\n\r\n      deleteTask(task) {\r\n          this.tasks = this.tasks.filter((t) => t.id !== task.id);\r\n      },\r\n\r\n      toggleTaskCompletion(task) {\r\n          task.completed = !task.completed;\r\n      },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.add-task-container {\r\n  padding: 20px;\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  background-color: #f0f8ff;\r\n  border-radius: 8px;\r\n}\r\n\r\n.input-group {\r\n  display: flex;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.task-input {\r\n  flex-grow: 1;\r\n  padding: 8px;\r\n  margin-right: 5px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n}\r\n\r\n.add-button {\r\n  padding: 8px 12px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  cursor: pointer;\r\n}\r\n\r\n.task-list {\r\n  margin-top: 20px;\r\n}\r\n\r\n.task-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 10px;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.completed {\r\n  text-decoration: line-through;\r\n  color: gray;\r\n}\r\n</style>\r\n\r\n\r\n  "],"mappings":";;AA4BA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,OAAA;MAAA;MACAC,KAAA;IACA;EACA;EACAC,OAAA;IACAC,QAAA;MACA,SAAAH,OAAA,CAAAI,IAAA;MAEA,MAAAJ,OAAA;QACAK,IAAA,OAAAL,OAAA;QACAM,SAAA;QACAC,EAAA,EAAAC,IAAA,CAAAC,GAAA;MACA;;MAEA;MACA,KAAAR,KAAA,CAAAS,OAAA,CAAAV,OAAA;MACA,KAAAA,OAAA;;MAEA;MACA,KAAAW,KAAA,cAAAX,OAAA;IACA;IAEAY,WAAAC,IAAA;MACA,KAAAZ,KAAA,QAAAA,KAAA,CAAAa,MAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAR,EAAA,KAAAM,IAAA,CAAAN,EAAA;IACA;IAEAS,qBAAAH,IAAA;MACAA,IAAA,CAAAP,SAAA,IAAAO,IAAA,CAAAP,SAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
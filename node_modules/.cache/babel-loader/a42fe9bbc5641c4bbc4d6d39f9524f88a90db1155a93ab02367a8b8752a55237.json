{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nexport default {\n  name: \"TaskList\",\n  data() {\n    return {\n      tasks: [],\n      // Almacenamiento de las tareas\n      apiTasks: [] // Almacenamiento para las tareas de la API\n    };\n  },\n  methods: {\n    // Función para obtener las tareas de la API\n    async fetchTasks() {\n      try {\n        const response = await fetch(\"https://dummyjson.com/todos\");\n        const data = await response.json();\n        this.apiTasks = data.todos;\n        this.tasks = [...this.apiTasks]; // Combina tareas API y locales\n      } catch (error) {\n        console.error(\"Error al obtener tareas de la API\", error);\n      }\n    },\n    toggleTaskCompletion(task) {\n      task.completed = !task.completed;\n    },\n    deleteTask(task) {\n      this.tasks = this.tasks.filter(t => t.id !== task.id);\n    }\n  }\n};","map":{"version":3,"names":["name","data","tasks","apiTasks","methods","fetchTasks","response","fetch","json","todos","error","console","toggleTaskCompletion","task","completed","deleteTask","filter","t","id"],"sources":["src/views/TaskList.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Lista de Tareas</h1>\r\n    <button @click=\"fetchTasks\">Cargar Tareas de API</button>\r\n    <div v-if=\"tasks.length > 0\">\r\n      <div v-for=\"task in tasks\" :key=\"task.id\">\r\n        <h5 :style=\"{ textDecoration: task.completed ? 'line-through' : 'none' }\">{{ task.todo }}</h5>\r\n        <span>{{ task.completed ? 'Completada' : 'Pendiente' }}</span>\r\n        <button @click=\"toggleTaskCompletion(task)\">\r\n          {{ task.completed ? 'Desmarcar' : 'Completar' }}\r\n        </button>\r\n        <button @click=\"deleteTask(task)\">Eliminar</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"TaskList\",\r\n  data() {\r\n    return {\r\n      tasks: [], // Almacenamiento de las tareas\r\n      apiTasks: [] // Almacenamiento para las tareas de la API\r\n    };\r\n  },\r\n  methods: {\r\n    // Función para obtener las tareas de la API\r\n    async fetchTasks() {\r\n      try {\r\n        const response = await fetch(\"https://dummyjson.com/todos\");\r\n        const data = await response.json();\r\n        this.apiTasks = data.todos;\r\n        this.tasks = [...this.apiTasks]; // Combina tareas API y locales\r\n      } catch (error) {\r\n        console.error(\"Error al obtener tareas de la API\", error);\r\n      }\r\n    },\r\n\r\n    toggleTaskCompletion(task) {\r\n      task.completed = !task.completed;\r\n    },\r\n\r\n    deleteTask(task) {\r\n      this.tasks = this.tasks.filter((t) => t.id !== task.id);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Estilos personalizados */\r\n</style>\r\n"],"mappings":";;AAkBA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,KAAA;MAAA;MACAC,QAAA;IACA;EACA;EACAC,OAAA;IACA;IACA,MAAAC,WAAA;MACA;QACA,MAAAC,QAAA,SAAAC,KAAA;QACA,MAAAN,IAAA,SAAAK,QAAA,CAAAE,IAAA;QACA,KAAAL,QAAA,GAAAF,IAAA,CAAAQ,KAAA;QACA,KAAAP,KAAA,YAAAC,QAAA;MACA,SAAAO,KAAA;QACAC,OAAA,CAAAD,KAAA,sCAAAA,KAAA;MACA;IACA;IAEAE,qBAAAC,IAAA;MACAA,IAAA,CAAAC,SAAA,IAAAD,IAAA,CAAAC,SAAA;IACA;IAEAC,WAAAF,IAAA;MACA,KAAAX,KAAA,QAAAA,KAAA,CAAAc,MAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAC,EAAA,KAAAL,IAAA,CAAAK,EAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nexport default {\n  name: \"CombinedView\",\n  data() {\n    return {\n      newTask: \"\",\n      tasks: [],\n      apiTasks: []\n    };\n  },\n  methods: {\n    addTask() {\n      if (this.newTask.trim() === \"\") return;\n      const newTask = {\n        todo: this.newTask,\n        completed: false,\n        id: Date.now()\n      };\n      this.tasks.unshift(newTask);\n      this.newTask = \"\";\n    },\n    async fetchTasks() {\n      try {\n        const response = await fetch(\"https://dummyjson.com/todos\");\n        const data = await response.json();\n        this.apiTasks = data.todos;\n        this.tasks = [...this.apiTasks]; // Combina tareas API y locales\n      } catch (error) {\n        console.error(\"Error al obtener tareas de la API\", error);\n      }\n    },\n    toggleTaskCompletion(task) {\n      task.completed = !task.completed;\n    },\n    deleteTask(task) {\n      this.tasks = this.tasks.filter(t => t.id !== task.id);\n    }\n  }\n};","map":{"version":3,"names":["name","data","newTask","tasks","apiTasks","methods","addTask","trim","todo","completed","id","Date","now","unshift","fetchTasks","response","fetch","json","todos","error","console","toggleTaskCompletion","task","deleteTask","filter","t"],"sources":["src/views/CombinedView.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h1>Vista Combinada</h1>\r\n      <div class=\"input-group\">\r\n        <input v-model=\"newTask\" @keyup.enter=\"addTask\" placeholder=\"Añadir nueva tarea\" class=\"task-input\" />\r\n        <button @click=\"addTask\" class=\"add-button\">Añadir</button>\r\n      </div>\r\n      <div v-if=\"tasks.length > 0\" class=\"task-list\">\r\n        <div v-for=\"task in tasks\" :key=\"task.id\">\r\n          <span :class=\"{ completed: task.completed }\">{{ task.todo }}</span>\r\n          <div>\r\n            <button @click=\"toggleTaskCompletion(task)\">{{ task.completed ? 'Desmarcar' : 'Completar' }}</button>\r\n            <button @click=\"deleteTask(task)\">Eliminar</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button @click=\"fetchTasks\">Cargar Tareas desde API</button>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: \"CombinedView\",\r\n    data() {\r\n      return {\r\n        newTask: \"\",\r\n        tasks: [],\r\n        apiTasks: []\r\n      };\r\n    },\r\n    methods: {\r\n      addTask() {\r\n        if (this.newTask.trim() === \"\") return;\r\n  \r\n        const newTask = {\r\n          todo: this.newTask,\r\n          completed: false,\r\n          id: Date.now(),\r\n        };\r\n  \r\n        this.tasks.unshift(newTask);\r\n        this.newTask = \"\";\r\n      },\r\n  \r\n      async fetchTasks() {\r\n        try {\r\n          const response = await fetch(\"https://dummyjson.com/todos\");\r\n          const data = await response.json();\r\n          this.apiTasks = data.todos;\r\n          this.tasks = [...this.apiTasks]; // Combina tareas API y locales\r\n        } catch (error) {\r\n          console.error(\"Error al obtener tareas de la API\", error);\r\n        }\r\n      },\r\n  \r\n      toggleTaskCompletion(task) {\r\n        task.completed = !task.completed;\r\n      },\r\n  \r\n      deleteTask(task) {\r\n        this.tasks = this.tasks.filter((t) => t.id !== task.id);\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* Estilos personalizados */\r\n  </style>\r\n  "],"mappings":";;AAqBA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,KAAA;MACAC,QAAA;IACA;EACA;EACAC,OAAA;IACAC,QAAA;MACA,SAAAJ,OAAA,CAAAK,IAAA;MAEA,MAAAL,OAAA;QACAM,IAAA,OAAAN,OAAA;QACAO,SAAA;QACAC,EAAA,EAAAC,IAAA,CAAAC,GAAA;MACA;MAEA,KAAAT,KAAA,CAAAU,OAAA,CAAAX,OAAA;MACA,KAAAA,OAAA;IACA;IAEA,MAAAY,WAAA;MACA;QACA,MAAAC,QAAA,SAAAC,KAAA;QACA,MAAAf,IAAA,SAAAc,QAAA,CAAAE,IAAA;QACA,KAAAb,QAAA,GAAAH,IAAA,CAAAiB,KAAA;QACA,KAAAf,KAAA,YAAAC,QAAA;MACA,SAAAe,KAAA;QACAC,OAAA,CAAAD,KAAA,sCAAAA,KAAA;MACA;IACA;IAEAE,qBAAAC,IAAA;MACAA,IAAA,CAAAb,SAAA,IAAAa,IAAA,CAAAb,SAAA;IACA;IAEAc,WAAAD,IAAA;MACA,KAAAnB,KAAA,QAAAA,KAAA,CAAAqB,MAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAf,EAAA,KAAAY,IAAA,CAAAZ,EAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}